/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as ForgotPasswordImport } from './routes/forgot-password'
import { Route as IndexImport } from './routes/index'
import { Route as ShopIndexImport } from './routes/shop/index'
import { Route as ContactIndexImport } from './routes/contact/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as AboutIndexImport } from './routes/about/index'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordRoute = ForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ShopIndexRoute = ShopIndexImport.update({
  id: '/shop/',
  path: '/shop/',
  getParentRoute: () => rootRoute,
} as any)

const ContactIndexRoute = ContactIndexImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
    '/contact/': {
      id: '/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactIndexImport
      parentRoute: typeof rootRoute
    }
    '/shop/': {
      id: '/shop/'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/about': typeof AboutIndexRoute
  '/blog': typeof BlogIndexRoute
  '/contact': typeof ContactIndexRoute
  '/shop': typeof ShopIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/about': typeof AboutIndexRoute
  '/blog': typeof BlogIndexRoute
  '/contact': typeof ContactIndexRoute
  '/shop': typeof ShopIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/about/': typeof AboutIndexRoute
  '/blog/': typeof BlogIndexRoute
  '/contact/': typeof ContactIndexRoute
  '/shop/': typeof ShopIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/about'
    | '/blog'
    | '/contact'
    | '/shop'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/about'
    | '/blog'
    | '/contact'
    | '/shop'
  id:
    | '__root__'
    | '/'
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/about/'
    | '/blog/'
    | '/contact/'
    | '/shop/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  AboutIndexRoute: typeof AboutIndexRoute
  BlogIndexRoute: typeof BlogIndexRoute
  ContactIndexRoute: typeof ContactIndexRoute
  ShopIndexRoute: typeof ShopIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  AboutIndexRoute: AboutIndexRoute,
  BlogIndexRoute: BlogIndexRoute,
  ContactIndexRoute: ContactIndexRoute,
  ShopIndexRoute: ShopIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/forgot-password",
        "/login",
        "/signup",
        "/about/",
        "/blog/",
        "/contact/",
        "/shop/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/forgot-password": {
      "filePath": "forgot-password.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    },
    "/contact/": {
      "filePath": "contact/index.tsx"
    },
    "/shop/": {
      "filePath": "shop/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
